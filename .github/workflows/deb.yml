name: build-deb
on:
  push:
  workflow_dispatch:

jobs:
  deb:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        suite: [trixie]   # bei Bedarf: sid hinzuf√ºgen
    container: debian:${{ matrix.suite }}

    steps:
      - uses: actions/checkout@v4

      - name: Show distro info
        run: |
          set -euxo pipefail
          cat /etc/os-release

      - name: Install base tools
        run: |
          set -euxo pipefail
          export DEBIAN_FRONTEND=noninteractive
          apt-get update
          apt-get install -y --no-install-recommends \
            devscripts equivs build-essential fakeroot ca-certificates git \
            cmake ninja-build pkg-config

      - name: Install Build-Depends from debian/control
        run: |
          set -euxo pipefail
          mk-build-deps -i -r -t 'apt-get -y --no-install-recommends' debian/control

      - name: Build .deb
        env:
          DEB_BUILD_OPTIONS: parallel=${{ runner.processorCount }}
        run: |
          set -euxo pipefail
          dpkg-buildpackage -us -uc -b

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: kfritz-${{ matrix.suite }}
          path: |
            ../*.deb
            ../*.changes
            ../*.buildinfo

      - name: Dump CMake logs on failure
        if: failure()
        run: |
          set +e
          echo "---- CMakeError.log ----"
          find .. -name CMakeError.log -print -exec sed -n '1,200p' {} \;
          echo "---- CMakeOutput.log (tail) ----"
          find .. -name CMakeOutput.log -print -exec tail -n 200 {} \;
