name: build-deb

on:
  push:
    paths:
      - '.github/workflows/deb.yml'
      - 'debian/**'
      - 'CMakeLists.txt'
      - '**/*.cmake'
      - 'src/**'
      - '**/*.cpp'
      - '**/*.h'
      - 'contents/**'
  workflow_dispatch:

jobs:
  deb:
    runs-on: ubuntu-latest
    container:
      image: debian:trixie

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Distro info
        run: |
          set -euxo pipefail
          cat /etc/os-release
          uname -a

      - name: Install base tools
        run: |
          set -euxo pipefail
          export DEBIAN_FRONTEND=noninteractive
          apt-get update
          apt-get install -y --no-install-recommends \
            devscripts equivs build-essential fakeroot ca-certificates git \
            cmake ninja-build pkg-config

      - name: Install Build-Depends from debian/control
        run: |
          set -euxo pipefail
          mk-build-deps -i -r -t 'apt-get -y --no-install-recommends' debian/control

      - name: Build .deb (tee full log)
        env:
          DEB_BUILD_OPTIONS: parallel=${{ runner.processorCount }}
          DH_VERBOSE: "1"
        run: |
          set -euxo pipefail
          dpkg-buildpackage -us -uc -b 2>&1 | tee build.log
          test ${PIPESTATUS[0]} -eq 0

      - name: List staged files (always)
        if: always()
        run: |
          set +e
          if [ -d debian/tmp ] || [ -d debian/kfritz ]; then
            echo "---- staged files ----"
            find debian/tmp debian/kfritz -maxdepth 5 -type f 2>/dev/null | sort
          else
            echo "No staged files yet (build failed before install)."
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: kfritz-trixie
          path: |
            build.log
            ../*.deb
            ../*.changes
            ../*.buildinfo

      - name: Dump CMake & debhelper logs on failure
        if: failure()
        run: |
          set +e
          echo "---- CMakeError.log ----"
          find . -name CMakeError.log -print0 | xargs -0 -r -I{} sh -c 'echo ">>> {}"; sed -n "1,200p" "{}"'
          echo "---- CMakeOutput.log (tail) ----"
          find . -name CMakeOutput.log -print0 | xargs -0 -r -I{} sh -c 'echo ">>> {}"; tail -n 200 "{}"'
          echo "---- CMakeCache (head) ----"
          for f in obj-*/CMakeCache.txt; do [ -f "$f" ] && { echo ">>> $f"; sed -n '1,120p' "$f"; }; done
          echo "---- debhelper logs (tail) ----"
          find ./debian -maxdepth 2 -type f -name '*.log' -print0 | xargs -0 -r -I{} sh -c 'echo ">>> {}"; tail -n 200 "{}"'
